# instructions - see ../doc/testing.txt

#set(DEBUG_OSCD 1) # print debug info during cmake

cmake_minimum_required(VERSION 3.13)
# Explicitly use new include policy to avoid globally shadowing included modules
# https://cmake.org/cmake/help/latest/policy/CMP0017.html
cmake_policy(SET CMP0017 NEW)
cmake_policy(SET CMP0057 NEW) # Interpret IN_LIST
cmake_policy(SET CMP0070 NEW) # Allow relative paths for file(GENERATE ...)

option(USE_IMAGE_COMPARE_PY "Use built-in image_compare.py" ON)

# Use variables for common paths, to reduce line lengths.

# Very commonly used cmake-provided paths
set(CBD ${CMAKE_BINARY_DIR}) # build top level
set(CSD ${CMAKE_SOURCE_DIR}) # project top level
set(CCBD ${CMAKE_CURRENT_BINARY_DIR}) # tests build dir
set(CCSD ${CMAKE_CURRENT_SOURCE_DIR}) # tests source dir
# Project paths
set(LIBRARIES_DIR       "${CSD}/libraries")
set(EXAMPLES_DIR        "${CSD}/examples")
# Test Data paths
set(TEST_DATA_DIR       "${CCSD}/data")
set(TEST_SCAD_DIR       "${CCSD}/data/scad")
set(TEST_CUSTOMIZER_DIR "${CCSD}/data/scad/customizer")
set(TEST_PYTHON_DIR     "${CCSD}/data/python")
# Test runner Python scripts
set(STLEXPORTSANITYTEST_PY "${CCSD}/stlexportsanitytest.py")
set(EXPORT_IMPORT_PNGTEST_PY     "${CCSD}/export_import_pngtest.py")
set(EXPORT_PNGTEST_PY    "${CCSD}/export_pngtest.py")
set(SHOULDFAIL_PY        "${CCSD}/shouldfail.py")
set(TEST_CMDLINE_TOOL_PY "${CCSD}/test_cmdline_tool.py")

include(./cmake/check_dependencies.cmake)

####################################
# Platform Specific Configurations #
####################################

# Workaround Gallium bugs
if ( ${CMAKE_SYSTEM_PROCESSOR} MATCHES "ppc")
  message(STATUS "Workaround PPC bug https://bugs.freedesktop.org/show_bug.cgi?id=42540")
  list(APPEND CTEST_ENVIRONMENT "GALLIUM_DRIVER=softpipe")
  list(APPEND CTEST_ENVIRONMENT "DRAW_USE_LLVM=no")
endif()
if ( ${CMAKE_SYSTEM_PROCESSOR} MATCHES "mips")
  message(STATUS "Workaround MIPS bug https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=868745")
  list(APPEND CTEST_ENVIRONMENT "GALLIUM_DRIVER=softpipe")
  list(APPEND CTEST_ENVIRONMENT "DRAW_USE_LLVM=no")
endif()

# Determine path for openscad executable
if(EXISTS "$ENV{OPENSCAD_BINARY}")
  set(OPENSCAD_BINPATH "$ENV{OPENSCAD_BINARY}")
elseif(APPLE)
  set(OPENSCAD_BINPATH "${CBD}/OpenSCAD.app/Contents/MacOS/OpenSCAD")
elseif (WIN32 OR MXECROSS)
  set(OPENSCAD_BINPATH "${CBD}/openscad.com")
elseif(EXISTS "${CBD}/bin/openscad${SUFFIX_WITH_DASH}")
  set(OPENSCAD_BINPATH "${CBD}/bin/openscad${SUFFIX_WITH_DASH}")
else()
  set(OPENSCAD_BINPATH "${CBD}/openscad${SUFFIX_WITH_DASH}")
endif()

#if(EXISTS "${OPENSCAD_BINPATH}")
#  message(STATUS "Found OpenSCAD binary: ${OPENSCAD_BINPATH}")
#else()
#  message(STATUS "Couldn't find the OpenSCAD binary: ${OPENSCAD_BINPATH}")
#  message(FATAL_ERROR "Please build the OpenSCAD binary and place it here: ${OPENSCAD_BINPATH}")
#endif()
list(APPEND CTEST_ENVIRONMENT "OPENSCAD_BINARY=${OPENSCAD_BINPATH}")
# Argument used for import/export tests
set(OPENSCAD_EXE_ARG "--openscad=${OPENSCAD_BINPATH}")

include(./cmake/functions.cmake)

#################################################
# Configure Templated Files and Generated Tests #
#################################################

configure_file(${TEST_SCAD_DIR}/templates/include-tests-template.scad
               ${TEST_SCAD_DIR}/misc/include-tests.scad)
configure_file(${TEST_SCAD_DIR}/templates/use-tests-template.scad
               ${TEST_SCAD_DIR}/misc/use-tests.scad)
configure_file(${TEST_SCAD_DIR}/templates/import_stl-tests-template.scad
               ${TEST_SCAD_DIR}/3D/features/import_stl-tests.scad)
configure_file(${TEST_SCAD_DIR}/templates/import_3mf-tests-template.scad
               ${TEST_SCAD_DIR}/3D/features/import_3mf-tests.scad)
configure_file(${TEST_SCAD_DIR}/templates/import_dxf-tests-template.scad
               ${TEST_SCAD_DIR}/2D/features/import_dxf-tests.scad)
configure_file(${TEST_PYTHON_DIR}/gen_issue2342-template.py
               ${TEST_PYTHON_DIR}/gen_issue2342.py)
configure_file(${TEST_PYTHON_DIR}/gen_svg_viewbox_tests-template.py
               ${TEST_PYTHON_DIR}/gen_svg_viewbox_tests.py)

# Set up custom commands to run before & after Ctest run.
# 1. Start/stop Virtual Framebuffer for linux/bsd. 2. Pretty Print
# Please see the CTestCustom.template file for more info.
message(STATUS "creating CTestCustom.cmake")
set(TEMPLATE_HEADER "Generated by cmake from ${CCSD}/CTestCustom.template")
set(UPLOADARG "")
if ($ENV{OPENSCAD_UPLOAD_TESTS})
  set(UPLOADARG "--upload")
endif()
configure_file(${CCSD}/CTestCustom.template ${CBD}/CTestCustom.cmake @ONLY)

# generate a very large scad file which we would rather not commit to the source tree
# this is for stress-testing the parser
add_custom_target(issue2342 ALL
  COMMAND ${Python3_EXECUTABLE} ${TEST_PYTHON_DIR}/gen_issue2342.py ">${TEST_SCAD_DIR}/issues/issue2342.scad"
  WORKING_DIRECTORY ${GEN_SCRIPT_DIR}
  COMMENT "Generating issue2342.scad"
)
add_custom_target(svg_viewbox_tests ALL
  COMMAND ${Python3_EXECUTABLE} ${TEST_PYTHON_DIR}/gen_svg_viewbox_tests.py "${TEST_DATA_DIR}/svg/viewbox" "${TEST_SCAD_DIR}/svg/extruded"
  WORKING_DIRECTORY ${GEN_SCRIPT_DIR}
  COMMENT "Generating svg viewbox tests"
)

include(./cmake/lists.cmake)

##############################
# Define test configurations #
##############################
# Must be done BEFORE adding any tests

# Clear test config cache variables
foreach(CONFIG $CACHE{TEST_CONFIGS})
  unset(${CONFIG}_TEST_CONFIG CACHE)
endforeach()

# Heavy tests are tests taking more than 5 seconds on a decent 2023 desktop
set_test_config(Heavy FILES
  render-csg-cgal_issue267-normalization-crash
  render-cgal_issue267-normalization-crash
)

# Bugs
set_test_config(Bugs FILES ${BUGS_FILES} ${BUGS_2D_FILES} PREFIXES
 render-cgal render-manifold render-csg-cgal preview-cgal preview-manifold throwntogether-cgal throwntogether-manifold)
set_test_config(Bugs FILES ${BUGS_FILES} PREFIXES
  preview-off render-monotone 
  preview-stl 
  render-stl render-stl-manifold
  render-stk-force
  render-off render-force-manifold)

# Re-enable "fixed by manifold" bugs for Manifold
set_test_config(Bugs FILES
  # https://github.com/openscad/openscad/issues/3567
  render-cgal_linear_extrude-scale-zero-tests
  render-csg-cgal_linear_extrude-scale-zero-tests

)

# Remove bugs fixed by manifold from the Bugs tag, to guard against regressions
remove_test_config(Bugs FILES
  render-manifold_issue591
  render-manifold_issue791 
  # FIXME: #802
  render-manifold_issue1455
)

# Examples
set_test_config(Examples FILES ${EXAMPLE_FILES} PREFIXES
  render-cgal render-manifold
  preview-cgal preview-manifold preview-manifold preview throwntogether-cgal throwntogether-manifold 
  render-csg-cgal render-monotone 
  preview-off render-off dump-examples)
set_test_config(Examples FILES ${EXAMPLE_2D_FILES} PREFIXES render-dxf)

include(./cmake/tests.cmake)

# Disable tests failing due to https://github.com/openscad/openscad/issues/4632
set_tests_properties(
  relative-output_csg_run
  relative-output_csg_check
  relative-output_ast_run 
  relative-output_ast_check
  PROPERTIES DISABLED TRUE
)

###################################
# Disable Tests with Known Issues #
###################################

set_tests_properties(
  # These don't output anything
  render-dxf_text-empty-tests
  render-dxf_nothing-decimal-comma-separated
  render-dxf_nullspace-2d
  render-svg_text-empty-tests
  render-svg_nullspace-2d

  # z-fighting different on different machines
  preview-cgal_issue1165
  preview-cgal_issue1215
  throwntogether-cgal_issue1089
  throwntogether-manifold_issue1089
  throwntogether-cgal_issue1215
  throwntogether-manifold_issue1215

  # The inf/nan tests fail when exporting CSG and rendering that output again
  # as currently inf/nan is written directly to the CSG file (e.g. r = inf)
  # which is not valid or even misleading in case a variable inf exists.
  # FIXME: define export behavior for inf/nan when exporting CSG files
  # These tests return error code 1.
  # FIXME: We should have a way of running these and verify the return code
  render-csg-cgal_primitive-inf-tests
  render-csg-cgal_transform-nan-inf-tests

  # Triggers a floating point accuracy issue causing loaded .csg to
  # render slightly differently
  render-cgal_nothing-decimal-comma-separated
  render-cgal_import-empty-tests
  render-cgal_empty-shape-tests
  render-csg-cgal_issue1258

  # The Apple SW renderer has a bug in the GLSL dFdy() function, used
  # by GLSL fwidth(), which causes horizonal line artifacts when using
  # wireframe rendering in preview model.
  preview-view-edges-cgal_view-options-tests
  preview-view-edges-manifold_view-options-tests
  render-view-edges-manifold_view-options-tests
  preview-view-axes-scales-edges_view-options-tests

  # OpenCSG z fighting
  preview-cgal_surface_image
  throwntogether-cgal_surface_image

  # CGAL sometimes fail to union minkowski convex decompositions, causing visual differences
  # in rendering.
  render-cgal_minkowski3-difference-test
  render-csg-cgal_minkowski3-difference-test
  preview-cgal_minkowski3-difference-test

  # https://github.com/openscad/openscad/issues/5159
  render-cgal_projection
  render-csg-cgal_projection

  # https://github.com/openscad/openscad/issues/5158
  #render-cgal_example017 
  #throwntogether-cgal_example017
  
  # https://github.com/openscad/openscad/issues/4398
  render-csg-cgal_logo_and_text

  # https://github.com/openscad/openscad/issues/909
  preview-amf_polyhedron-single-triangle
  render-amf_bad-stl-tardis
  render-amf_bad-stl-pcbvicebar
  render-amf_bad-stl-wing

  # When exported from CGAL, the file cannot be re-imported
  render-stl_bad-stl-wing
  render-off-cgal_bad-stl-wing
  render-obj_bad-stl-wing

  # https://github.com/openscad/openscad/issues/2301
  render-cgal_issue2301
  preview-cgal_issue2301
  render-csg-cgal_issue2301
  throwntogether-cgal_issue2301

  # https://github.com/openscad/openscad/issues/2090
  render-cgal_issue2090
  preview-cgal_issue2090
  render-csg-cgal_issue2090

  # https://github.com/openscad/openscad/issues/2841
  render-cgal_issue2841
  preview-cgal_issue2841
  render-csg-cgal_issue2841
  render-cgal_issue2841b
  preview-cgal_issue2841b
  render-csg-cgal_issue2841b
  
  PROPERTIES DISABLED TRUE
)
if (ENABLE_MANIFOLD)
set_tests_properties(
  # z-fighting different on different machines
  preview-manifold_issue1165
  preview-manifold_issue1215
  preview-cgal_example017
  preview-manifold_example017

  # Manifold triangle order not stable, causes transparent
  # objects to render differently on different machines
  render-manifold_color-tests
  render-manifold_hex-colors-tests
  render-manifold_projection

  # https://github.com/openscad/openscad/issues/909
  render-amf-manifold_bad-stl-wing
  render-amf-manifold_bad-stl-pcbvicebar
  render-amf-manifold_bad-stl-tardis

  # https://github.com/openscad/openscad/issues/2841
  render-manifold_issue2841b
  preview-manifold_issue2841b

  # OpenCSG z fighting
  preview-manifold_surface_image
  throwntogether-manifold_surface_image

  # https://github.com/openscad/openscad/issues/5135
  render-force-manifold_issue5135-bad

  # https://github.com/openscad/openscad/issues/5218
  throwntogether-manifold_issue5218
  throwntogether-manifold_issue913
  throwntogether-manifold_example016

  PROPERTIES DISABLED TRUE
)
endif (ENABLE_MANIFOLD)

if (EXPERIMENTAL)
set_tests_properties(
  # https://github.com/openscad/openscad/issues/5220
  render-cgal_roof
  render-csg-cgal_roof

  PROPERTIES DISABLED TRUE
)
endif (EXPERIMENTAL)

if (LIB3MF_FOUND)
  if (EXPERIMENTAL)
    set_tests_properties(
      # https://github.com/openscad/openscad/issues/5800
      export-3mf_3mf-export

      PROPERTIES DISABLED TRUE
    )
  endif (EXPERIMENTAL)
  if (ENABLE_MANIFOLD)
    set_tests_properties(
      # https://github.com/openscad/openscad/issues/5966
     render-off-manifold_issue5216
     render-3mf-manifold_issue5216

     PROPERTIES DISABLED TRUE
    )
  endif (ENABLE_MANIFOLD)  
  set_tests_properties(
    # When exported from CGAL, the file cannot be re-imported
    render-3mf-cgal_bad-stl-wing

    # For some reason, only failing on Linux
    render-3mf-cgal_bad-stl-tardis
    
    PROPERTIES DISABLED TRUE
  )
else()
  set_tests_properties(
    preview-cgal_import_3mf-tests
    render-cgal_import_3mf-tests
    render-csg-cgal_import_3mf-tests
    throwntogether-cgal_import_3mf-tests
    throwntogether-manifold_import_3mf-tests
    PROPERTIES DISABLED TRUE
  )
endif(LIB3MF_FOUND)

# Platform specific test disable
if(APPLE)
elseif(UNIX)
elseif(WIN32 OR MXECROSS)
  set_tests_properties(
    # Known UTF-8 issue on Windows
    export-csg-nonascii_sfære
    # requires `gs` tool
    export-pdf_centered
    export-pdf_simple-pdf
    PROPERTIES DISABLED TRUE
  )
endif()

##############################################
# Test Installation and Packaging (Win only) #
##############################################

# Package Tests with Windows (.zip archive only)
if(MXECROSS AND EXPERIMENTAL)
  set(CPACK_ARCHIVE_COMPONENT_INSTALL ON)

  include(CPackComponent)
  cpack_add_component(Tests ARCHIVE_FILE OpenSCAD-Tests-${CPACK_PACKAGE_VERSION})

  install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/
    DESTINATION tests
    USE_SOURCE_PERMISSIONS
    COMPONENT Tests
    PATTERN ".git*" EXCLUDE
    PATTERN "OpenSCAD_Test_Console.py" EXCLUDE
    PATTERN "WinReadme.txt" EXCLUDE
    PATTERN "mingw_convert_ctest.py" EXCLUDE
    PATTERN "mingwcon.bat" EXCLUDE
  )
  install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/
    DESTINATION tests-build
    USE_SOURCE_PERMISSIONS
    COMPONENT Tests
    PATTERN "venv" EXCLUDE
    PATTERN "CMakeFiles" EXCLUDE
    PATTERN "CMakeLists.txt" EXCLUDE
    PATTERN "cmake_install.cmake" EXCLUDE
  )

  # Move files to top project dir for visibility
  install(FILES OpenSCAD_Test_Console.py DESTINATION . COMPONENT Tests)
  install(FILES WinReadme.txt DESTINATION . COMPONENT Tests RENAME "Windows_Test_Readme.txt")
  # Move files to tests-build dir
  install(FILES mingw_convert_ctest.py DESTINATION tests-build COMPONENT Tests)
  install(FILES mingwcon.bat DESTINATION tests-build COMPONENT Tests)

  file(GENERATE OUTPUT mingw_cross_info.py CONTENT
"# created automatically during packaging by cmake from within linux
linux_abs_basedir='${CMAKE_SOURCE_DIR}'
linux_abs_builddir='${CMAKE_BINARY_DIR}'
linux_python='${Python3_EXECUTABLE}'
linux_convert='${IMAGE_COMPARE_EXE}'
win_installdir='OpenSCAD-Tests-${CPACK_PACKAGE_VERSION}'
" NEWLINE_STYLE WIN32)

endif()

####################
# Extra Debug Info #
####################

# Use cmake option "--log-level DEBUG" during top level config to see this
message(DEBUG "Available test configurations: ${TEST_CONFIGS}")
foreach(CONF ${TEST_CONFIGS})
  list(SORT ${CONF}_TEST_CONFIG)
  message(DEBUG "${CONF}: ${${CONF}_TEST_CONFIG}")
endforeach()

